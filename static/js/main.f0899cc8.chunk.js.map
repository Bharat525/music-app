{"version":3,"sources":["util.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","catch","error","console","log","Player","setIsPlaying","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","useState","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","className","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","chillhop","volume","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0899cc8.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then((audio) => {\r\n            audioRef.current.play();\r\n          })\r\n          .catch((error) => console.log(error));\r\n      }\r\n    }\r\n  };\r\n  ","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { playAudio } from \"../util\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const [activeVolume, setActiveVolume] = useState(false);\r\n  //UseEffect Update List\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  //Event Handlers\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    //Forward BAck\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        playAudio(isPlaying, audioRef);\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  const changeVolume = (e) => {\r\n    let value = e.target.value;\r\n    audioRef.current.volume = value;\r\n    setSongInfo({ ...songInfo, volume: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n       \r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        className={isPlaying ? \"rotateSong\" : \"\"}\r\n        src={currentSong.cover}\r\n        alt=\"\"\r\n      />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../util\";\r\n\r\nconst LibrarySong = ({\r\n  name,\r\n  artist,\r\n  cover,\r\n  id,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  active,\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    setCurrentSong({ ...selectedSong[0] });\r\n    //Set Active in library\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    //Play audio\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={cover} alt=\"\" />\r\n      <div className=\"song-description\">\r\n        <h3>{name}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\n\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            cover={song.cover}\r\n            name={song.name}\r\n            artist={song.artist}\r\n            active={song.active}\r\n            key={song.id}\r\n            id={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  const openLibraryHandler = () => {\r\n    setLibraryStatus(!libraryStatus);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <h1>Mad Monkey</h1>\r\n      <button\r\n        className={libraryStatus ? \"library-active\" : \"\"}\r\n        onClick={openLibraryHandler}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport \"./styles/app.scss\";\n//Import data\nimport chillhop from \"./data\";\n//Util\nimport { playAudio } from \"./util\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n      volume: e.target.volume,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    playAudio(isPlaying, audioRef);\n    return;\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n       \n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}